{#
    List of inputs:
    Here:
    - subject
    - session

    anatomical_interactive_plots:
    - structural_files{image_type}{"mosaic"}
    - structural_files{image_type}{"slices"}[]

    anatomical_static_plots:
    - structural_files{image_type}{"registration_files"}[]
    - structural_files{image_type}{"registration_titles"}[]

    concatenated_task_static_plots:
    - concatenated_rest_files{"preproc_carpet"}
    - concatenated_rest_files{"postproc_carpet"}

    task_static_plots:
    - task_files[]{"task"}
    - task_files[]{"run"}
    - task_files[]{"task_in_t1w"}
    - task_files[]{"t1w_in_task"}
    - task_files[]{"bold"}
    - task_files[]{"reference"}
    - task_files[]{"preproc_carpet"}
    - task_files[]{"postproc_carpet"}
#}
<!DOCTYPE html>
<html>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"
    integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
<style type="text/css">
    header, footer, section, article, nav, aside { display: block; }
    h1, h2, h3, body, button, p, w3-btn { font-family: Verdana, Helvetica, Arial, Bookman, sans-serif; }
    h1 { text-align: center; font-size: 2.5em; }
    h2 { text-align: center; font-size: 2.00em; }
    h3 { text-align: left; font-size: 2.5em; }
    p { font-size: 1.0em; }
    body { font-size: 1.0em; }
    img { width: 100%; padding: 2px; }
    .label1, .label2, .label3, .label4 { font-family: Verdana, Helvetica, Arial, Bookman, sans-serif }
    .label1 { font-size: 1.25em; text-align: center; }
    .label2 { font-size: 1.25em; text-align: right; }
    .label3 { font-size: 1.25em; text-align: left; }
    .label4 { font-size: 1.00em; text-align: center; }
    .grid-container { grid-gap: 2px; padding: 2px; }
    .T1pngs, .T2pngs, .Registrations, .Carpets { display: none; }
    .modal { vertical-align: top; margin-top:0; border-top-style:none; padding-top:0; top:0; height: 100%; width: auto; }
    .Images { display: none; height: 100%; width: auto; }
</style>
<body>
    {# Make the html "title" (what will be seen on the tab, etc.), as well as the page header. #}
    <title>Executive Summary: {{ subject }} {{ session }}</title>
    <header> <h1>{{ subject }}/{{ session }}</h1> </header>

    {# Define namespace variables to track across templates #}
    {% set ns = namespace(
        registration_files = [],
        carpet_files = [],
        image_files = [],
        registrations_counter = 1,
        carpets_counter = 1,
        images_counter = 1,
    ) %}

    {# Compile a list of all structural registration files. #}
    {% for img_type in structural_files.keys() %}
        {% set modality_structural_files = structural_files[img_type] %}
        {% for reg_file in modality_structural_files["registration_files"] %}
            {% if reg_file != "None" %}
                {{ ns.registration_files.append(reg_file) or "" }}
            {% endif %}
        {% endfor %}
    {% endfor %}

    {% if concatenated_rest_files["preproc_carpet"] != "None" %}
        {{ ns.carpet_files.append(concatenated_rest_files["preproc_carpet"]) or "" }}
    {% endif %}
    {% if concatenated_rest_files["postproc_carpet"] != "None" %}
        {{ ns.carpet_files.append(concatenated_rest_files["postproc_carpet"]) or "" }}
    {% endif %}

    {% for run_dict in task_files %}
        {# Collect functional registration files first #}
        {# counters are iterated in the relevant templates later #}
        {% for reg_file in run_dict["registration_files"] %}
            {% if reg_file != "None" %}
                {{ ns.registration_files.append(reg_file) or "" }}
            {% endif %}
        {% endfor %}

        {# Collect carpet plots next #}
        {% if run_dict["preproc_carpet"] != "None" %}
            {{ ns.carpet_files.append(run_dict["preproc_carpet"]) or "" }}
        {% endif %}
        {% if run_dict["postproc_carpet"] != "None" %}
            {{ ns.carpet_files.append(run_dict["postproc_carpet"]) or "" }}
        {% endif %}

        {# Collect other plots last #}
        {% if run_dict["bold"] != "None" %}
            {{ ns.image_files.append(run_dict["bold"]) or "" }}
        {% endif %}
        {% if run_dict["reference"] != "None" %}
            {{ ns.image_files.append(run_dict["reference"]) or "" }}
        {% endif %}
    {% endfor %}

    {# Brainsprite viewer for T1w and T2w, along with the "View T1w/T2w PNGs" buttons. #}
    {% include "brainsprite_with_pngs.html.jinja" %}

    {#
        "Anatomical Data" section, with static gif files showing segmentations.
        1. Atlas in T1
        2. T1 in Atlas
        3. Atlas in Subcorticals (nibabies only)
        4. Subcorticals in Atlas (nibabies only)
    #}
    {% include "anatomical_registration_plots.html.jinja" %}

    {# Carpet/line plot for pre- and post-regression, concatenate across runs. #}
    {% include "concatenated_task_static_plots.html.jinja" %}

    {#
        Task static plots. One section per run of each task.
        1. Task in T1
        2. T1 in Task
        3. BOLD mean(?) image on the left
        4. BOLD reference image on the left
        3/4. Pre and post regression carpet/line plots on right.
    #}
    {% include "task_static_plots.html.jinja" %}

    {# Generate scripts and list of images for different mode-specific cyclers. #}
    {% include "cyclers.html.jinja" %}

</body>
</html>
